{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(props) {\n  _s();\n  const [boardList, setBoardList] = useState([]);\n  console.log(boardList);\n  // useEffect(() => {\n  //   // 서버에서 데이터를 가져오는 GET 요청\n  //   axios.get('http://localhost:4000/Board')\n  //     .then((response) => {\n  //       setBoardList(response.data); // 서버에서 받은 데이터를 상태 변수에 저장\n  //     })\n  //     .catch((error) => {\n  //       console.error('데이터 가져오기 중 오류 발생:', error);\n  //     });\n  // }, []); // useEffect를 빈 배열로 전달하여 컴포넌트가 처음 렌더링될 때만 실행\n\n  async () => {\n    try {\n      await axios.get('http://localhost:4000/Board').then(response => {\n        console.log(response.data);\n      });\n    } catch (e) {\n      console.log(e);\n      alert('Error데이터를 불러올 수 없습니다');\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC791\\uC131\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uB0B4\\uC6A9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: boardList.map((a, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.who\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  };\n}\n_s(List, \"quZjYB0r95pq19PHuGd328ubLEk=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","Table","Button","Board","jsxDEV","_jsxDEV","List","props","_s","boardList","setBoardList","console","log","get","then","response","data","e","alert","children","striped","bordered","hover","fileName","_jsxFileName","lineNumber","columnNumber","map","a","index","title","who","content","variant","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/List.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Board from './Board';\r\n\r\n\r\n  function List(props) {\r\n\r\n    const [boardList, setBoardList] = useState([]);\r\n\r\n  console.log(boardList);\r\n  // useEffect(() => {\r\n  //   // 서버에서 데이터를 가져오는 GET 요청\r\n  //   axios.get('http://localhost:4000/Board')\r\n  //     .then((response) => {\r\n  //       setBoardList(response.data); // 서버에서 받은 데이터를 상태 변수에 저장\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error('데이터 가져오기 중 오류 발생:', error);\r\n  //     });\r\n  // }, []); // useEffect를 빈 배열로 전달하여 컴포넌트가 처음 렌더링될 때만 실행\r\n  \r\n  async()=> {\r\n    try{\r\n      await axios.get('http://localhost:4000/Board')\r\n        .then(response=>{\r\n          console.log(response.data)\r\n        })     \r\n    }catch(e){\r\n      console.log(e)\r\n      alert('Error데이터를 불러올 수 없습니다')\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>번호</th>\r\n            <th>제목</th>\r\n            <th>작성자</th>\r\n            <th>내용</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n        {\r\n        boardList.map((a, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{a.title}</td>\r\n              <td>{a.who}</td>\r\n              <td>{a.content}</td>\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n      </Table>\r\n      <Button variant=\"info\">글쓰기</Button>\r\n      <Button variant=\"secondary\">수정하기</Button>\r\n      <Button variant=\"danger\">삭제하기</Button>\r\n    </div>\r\n  );\r\n}\r\n  }\r\n\r\nexport default List;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDc,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,YAAU;IACR,IAAG;MACD,MAAMT,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAE;QACdJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACC,IAAI,CAAC;MAC5B,CAAC,CAAC;IACN,CAAC,QAAMC,CAAC,EAAC;MACPN,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC;MACdC,KAAK,CAAC,sBAAsB,CAAC;IAC/B;IAGF,oBACEb,OAAA;MAAAc,QAAA,gBACEd,OAAA,CAACJ,KAAK;QAACmB,OAAO;QAACC,QAAQ;QAACC,KAAK;QAAAH,QAAA,gBAC3Bd,OAAA;UAAAc,QAAA,eACEd,OAAA;YAAAc,QAAA,gBACEd,OAAA;cAAAc,QAAA,EAAI;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXrB,OAAA;cAAAc,QAAA,EAAI;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXrB,OAAA;cAAAc,QAAA,EAAI;YAAG;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZrB,OAAA;cAAAc,QAAA,EAAI;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRrB,OAAA;UAAAc,QAAA,EAGAV,SAAS,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACnBxB,OAAA;YAAAc,QAAA,gBACEd,OAAA;cAAAc,QAAA,EAAKU,KAAK,GAAG;YAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBrB,OAAA;cAAAc,QAAA,EAAKS,CAAC,CAACE;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClBrB,OAAA;cAAAc,QAAA,EAAKS,CAAC,CAACG;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChBrB,OAAA;cAAAc,QAAA,EAAKS,CAAC,CAACI;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJbG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACRrB,OAAA,CAACH,MAAM;QAAC+B,OAAO,EAAC,MAAM;QAAAd,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnCrB,OAAA,CAACH,MAAM;QAAC+B,OAAO,EAAC,WAAW;QAAAd,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCrB,OAAA,CAACH,MAAM;QAAC+B,OAAO,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAEV,CAAC;AACC;AAAClB,EAAA,CA3DQF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA6Df,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
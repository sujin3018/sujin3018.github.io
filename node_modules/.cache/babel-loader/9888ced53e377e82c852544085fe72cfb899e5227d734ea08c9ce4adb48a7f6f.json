{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board() {\n  _s();\n  const express = require('express');\n  const cors = require('cors');\n  const app = express();\n  let corsOptions = {\n    origin: \"*\",\n    // 출처 허용 옵션\n    credential: true // 사용자 인증이 필요한 리소스(쿠키 ..등) 접근\n  };\n\n  app.use(cors(corsOptions));\n\n  // 게시글 제목, 글쓴이, 내용, 그리고 선택한 파일을 관리할 상태 변수\n  const [title, setTitle] = useState('');\n  const [who, setWho] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  let navigate = useNavigate();\n\n  // 게시글을 제출하는 함수\n  const Submit = () => {\n    // 여기에서 게시글을 서버에 보내거나 다른 작업을 수행할 수 있습니다.\n    // 선택한 파일 정보도 이용하여 업로드할 수 있습니다.\n    // console.log('제목:', title);\n    // console.log('글쓴이:', who);\n    // console.log('내용:', content);\n    // console.log('선택한 파일:', file);\n\n    axios.get(\"http://localhost:4000/\", {}).then(() => {\n      alert(\"등록 완료!\");\n    });\n    const newPost = [title, who];\n    // console.log(newPost);\n    //addPost(newPost);\n\n    navigate('/List', {\n      state: {\n        title,\n        who\n      }\n    });\n\n    // 게시글 작성 후 입력 내용 초기화\n    setTitle('');\n    setWho('');\n    setContent('');\n    setFile('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          htmlFor: \"title\",\n          children: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          htmlFor: \"who\",\n          children: \"\\uAE00\\uC4F4\\uC774\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"who\",\n          value: who,\n          onChange: e => setWho(e.target.value),\n          className: \"space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          htmlFor: \"content\",\n          children: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          className: \"space1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          accept: \"image/*\" // 이미지 파일만 허용하도록 설정\n          ,\n          value: file,\n          onChange: e => setFile(e.target.value),\n          className: \"space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: Submit,\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"yfpQgNi0mJnTfvVDDm4gHucfhRw=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Board","_s","express","require","cors","app","corsOptions","origin","credential","use","title","setTitle","who","setWho","content","setContent","file","setFile","navigate","Submit","get","then","alert","newPost","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Board.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Board() {\r\n\r\nconst express = require('express')\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\nlet corsOptions = {\r\n  origin: \"*\", // 출처 허용 옵션\r\n  credential: true, // 사용자 인증이 필요한 리소스(쿠키 ..등) 접근\r\n};\r\n\r\napp.use(cors(corsOptions));\r\n\r\n\r\n  // 게시글 제목, 글쓴이, 내용, 그리고 선택한 파일을 관리할 상태 변수\r\n  const [title, setTitle] = useState('');\r\n  const [who, setWho] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [file, setFile] = useState('');\r\n  let navigate = useNavigate();\r\n  \r\n  // 게시글을 제출하는 함수\r\n  const Submit = () => {\r\n    // 여기에서 게시글을 서버에 보내거나 다른 작업을 수행할 수 있습니다.\r\n    // 선택한 파일 정보도 이용하여 업로드할 수 있습니다.\r\n    // console.log('제목:', title);\r\n    // console.log('글쓴이:', who);\r\n    // console.log('내용:', content);\r\n    // console.log('선택한 파일:', file);\r\n\r\n    axios.get(\"http://localhost:4000/\", {}).then(() => {\r\n      alert(\"등록 완료!\");\r\n  });\r\n\r\n\r\n   const newPost = [\r\n      title,\r\n      who,\r\n   ];\r\n    // console.log(newPost);\r\n    //addPost(newPost);\r\n   \r\n    navigate('/List',  {\r\n      state : {\r\n      title ,\r\n      who\r\n    }\r\n  });\r\n\r\n    \r\n    // 게시글 작성 후 입력 내용 초기화\r\n    setTitle('');\r\n    setWho('');\r\n    setContent('');\r\n    setFile('');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    <div className='bar'>\r\n      <h1>글 작성</h1>\r\n      <form>\r\n        <div>\r\n          <div htmlFor=\"title\">제목</div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className='space'\r\n          />\r\n        </div>\r\n        <div>\r\n          <div htmlFor=\"who\">글쓴이</div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"who\"\r\n            value={who}\r\n            onChange={(e) => setWho(e.target.value)}\r\n            className='space'\r\n          />\r\n        </div>\r\n        <div>\r\n          <div htmlFor=\"content\">내용</div>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            className='space1'\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\" // 이미지 파일만 허용하도록 설정\r\n            value={file}\r\n            onChange={(e) => setFile(e.target.value)}\r\n            className='space'\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={Submit}>\r\n          게시글 작성\r\n        </button>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
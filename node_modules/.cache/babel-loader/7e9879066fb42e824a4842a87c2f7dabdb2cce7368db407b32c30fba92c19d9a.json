{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\BoardDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardDetail() {\n  _s();\n  let location = useLocation();\n  var [post, setPost] = useState([]); // 게시글 정보를 저장할 상태 변수\n  let [pcount, tcount] = useState(0);\n  const {\n    id\n  } = useParams();\n  var [totalDetail, setTotalDetail] = useState('');\n  useEffect(() => {\n    axios.get(`http://localhost:4000/Board/${id}`).then(response => {\n      setTotalDetail(response.data); // 서버에서 받은 데이터를 상태 변수에 저장\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Detail 가져오다가 오류 발생:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(totalDetail).map((a, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: i + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", totalDetail[a].BOARD_TITLE]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this)\n\n  //   <div>\n  //   <h2>게시글 상세정보</h2> <br/>\n\n  //   <div className=\"post-view-row\">\n  //   <label>게시글 번호</label>\n  //   {/* <label>{ post.no}</label> */}\n  //   <label>{totalDetail.BOARD_NO}</label>\n  //   </div>\n  //   <div className=\"post-view-row\">\n  //   <label>제목</label>\n  //   <label>{ post.title }</label>\n  //   {/* <label>{total[0].BOARD_TITLE}</label> */}\n  //   </div>\n  //   <div className=\"post-view-row\">\n  //   <label>작성자</label>\n  //   <label>{ post.who }</label>\n  //   </div>\n  //   <div className=\"post-view-row\">\n  //   <label>조회수</label>\n  //   <label>{ pcount }</label>\n  //   </div>\n\n  //   <div >\n  //   <td/>\n  //    <div className='content'>\n  //  {\n  //   post.content\n  //    }\n  //    </div>\n\n  //   </div>\n  //   </div>\n  ;\n}\n\n/* <div className=\"post-view-row\">\r\n<label>첨부파일</label>\r\n{image && <img src={`data:image/jpeg;base64,${image}`} alt=\"이미지\" />}\r\n</div> */\n_s(BoardDetail, \"FTnnL49Bpxcz0bMlVR0SuXDSwfM=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = BoardDetail;\nexport default BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","Link","useNavigate","useLocation","useParams","axios","useState","useEffect","jsxDEV","_jsxDEV","BoardDetail","_s","location","post","setPost","pcount","tcount","id","totalDetail","setTotalDetail","get","then","response","data","console","log","catch","error","children","Object","keys","map","a","i","fileName","_jsxFileName","lineNumber","columnNumber","BOARD_TITLE","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/BoardDetail.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate , useLocation , useParams} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction BoardDetail() {\r\n   \r\n    let location = useLocation();\r\n    var [post, setPost] = useState([]); // 게시글 정보를 저장할 상태 변수\r\n    let [pcount , tcount] = useState(0);\r\n    const { id } = useParams();\r\n    var [totalDetail, setTotalDetail] = useState('');\r\n\r\n    useEffect(() => {\r\n      axios.get(`http://localhost:4000/Board/${id}`)\r\n        .then((response) => {\r\n        setTotalDetail(response.data); // 서버에서 받은 데이터를 상태 변수에 저장\r\n        console.log(response.data);\r\n        })\r\n        .catch((error)=>{\r\n          console.error('Detail 가져오다가 오류 발생:', error);\r\n        });\r\n      }, []); \r\n\r\n\r\n\r\n      return (\r\n        <div>\r\n          {\r\n      Object.keys(totalDetail).map((a, i) => (\r\n      <tr key={i}>\r\n      <td>{i +1 }</td>\r\n      <td> {totalDetail[a].BOARD_TITLE}</td>\r\n      {/* <td>{data[a].BOARD_CONTENT}</td>\r\n      <td>{data[a].BOARD_NAME}</td> */}\r\n      </tr>\r\n       ))}\r\n        </div>\r\n\r\n\r\n\r\n      //   <div>\r\n      //   <h2>게시글 상세정보</h2> <br/>\r\n        \r\n      //   <div className=\"post-view-row\">\r\n      //   <label>게시글 번호</label>\r\n      //   {/* <label>{ post.no}</label> */}\r\n      //   <label>{totalDetail.BOARD_NO}</label>\r\n      //   </div>\r\n      //   <div className=\"post-view-row\">\r\n      //   <label>제목</label>\r\n      //   <label>{ post.title }</label>\r\n      //   {/* <label>{total[0].BOARD_TITLE}</label> */}\r\n      //   </div>\r\n      //   <div className=\"post-view-row\">\r\n      //   <label>작성자</label>\r\n      //   <label>{ post.who }</label>\r\n      //   </div>\r\n      //   <div className=\"post-view-row\">\r\n      //   <label>조회수</label>\r\n      //   <label>{ pcount }</label>\r\n      //   </div>\r\n       \r\n      //   <div >\r\n      //   <td/>\r\n      //    <div className='content'>\r\n      //  {\r\n      //   post.content\r\n      //    }\r\n      //    </div>\r\n\r\n      //   </div>\r\n      //   </div>\r\n      );\r\n\r\n }\r\n\r\n/* <div className=\"post-view-row\">\r\n<label>첨부파일</label>\r\n{image && <img src={`data:image/jpeg;base64,${image}`} alt=\"이미지\" />}\r\n</div> */\r\n\r\nexport default BoardDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAGC,WAAW,EAAGC,SAAS,QAAO,kBAAkB;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,IAAIC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC5B,IAAI,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,IAAI,CAACS,MAAM,EAAGC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM;IAAEW;EAAG,CAAC,GAAGb,SAAS,CAAC,CAAC;EAC1B,IAAI,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdF,KAAK,CAACe,GAAG,CAAE,+BAA8BH,EAAG,EAAC,CAAC,CAC3CI,IAAI,CAAEC,QAAQ,IAAK;MACpBH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC/BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAG;MACdH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAIN,oBACElB,OAAA;IAAAmB,QAAA,EAEFC,MAAM,CAACC,IAAI,CAACZ,WAAW,CAAC,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAClCxB,OAAA;MAAAmB,QAAA,gBACAnB,OAAA;QAAAmB,QAAA,EAAKK,CAAC,GAAE;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChB5B,OAAA;QAAAmB,QAAA,GAAI,GAAC,EAACV,WAAW,CAACc,CAAC,CAAC,CAACM,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAF7BJ,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI;;EAIP;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EAAA;AAGL;;AAED;AACA;AACA;AACA;AAHA1B,EAAA,CAxESD,WAAW;EAAA,QAEDP,WAAW,EAGXC,SAAS;AAAA;AAAAmC,EAAA,GALnB7B,WAAW;AA6EpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from\"C:/Users/m/Desktop/study/project/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/m/Desktop/study/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/m/Desktop/study/project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import Form from'react-bootstrap/Form';import data from\"../data.js\";import{Routes,Route,Link,useNavigate}from'react-router-dom';import Result from\"./Result.js\";import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),answer=_useState2[0],setAnswer=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),num=_useState4[0],setNum=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var totalPage=5;// 한 페이지에 표시할 질문의 수를 나타내는 변수\nvar start=(page-1)*totalPage;var end=start+totalPage;var curPage=data.slice(start,end);var isLastPage=end>=data.length;var isFristPage=start!==0;var navigate=useNavigate();var nextPage=function nextPage(){var ques=data.slice(start,end).filter(function(test){return!answer[\"question_\".concat(test.id)];});if(ques.length>0){var _num=ques.map(function(question){return question.id;});setNum(_num);alert(\"\".concat(_num.join(\", \"),\" \\uBC88 \\uC9C8\\uBB38\\uC5D0 \\uB2F5\\uBCC0\\uD574\\uC8FC\\uC138\\uC694!\"));}else{if(isLastPage){navigate('/result');}else{setPage(page+1);}}};var change=function change(questionId,value){setAnswer(_objectSpread(_objectSpread({},answer),{},_defineProperty({},questionId,value)));};// let totalScore = (questionId, value) => {\n//   // 문항 4, 5, 7, 8에 대한 규칙\n//   const spec = [4, 5, 7, 8];\n//   // 선택한 값에 따라 점수를 설정\n//   let score;\n//   if (spec.includes(questionId)) {\n//     switch (value) {\n//       case '전혀':\n//         score = 3;\n//         break;\n//       case '가끔':\n//         score = 2;\n//         break;\n//       case '자주':\n//         score = 1;\n//         break;\n//       case '항상':\n//         score = 0;\n//         break;\n//       default:\n//         score = 0;\n//     }\n//   } else {\n//     switch (value) {\n//       case '전혀':\n//         score = 0;\n//         break;\n//       case '가끔':\n//         score = 1;\n//         break;\n//       case '자주':\n//         score = 2;\n//         break;\n//       case '항상':\n//         score = 3;\n//         break;\n//       default:\n//         score = 0;\n//     }\n//   }\n//   setAnswer({ ...answer, [questionId]: score });\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uC2A4\\uD2B8\\uB808\\uC2A4 \\uC790\\uAC00 \\uC9C4\\uB2E8\"}),/*#__PURE__*/_jsx(\"br\",{}),curPage.map(function(test){var questionId=\"question_\".concat(test.id);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[test.id,\". \",test.text]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:/*#__PURE__*/_jsx(Form,{children:['전혀','가끔','자주','항상'].map(function(value){return/*#__PURE__*/_jsxs(\"label\",{style:{marginRight:'10px'},children:[/*#__PURE__*/_jsx(Form.Check,{// className=\"radi\"\ninline:true,name:questionId,type:\"radio\",value:value,onChange:function onChange(){return change(questionId,value);},checked:answer[questionId]===value}),value]},value);})})}),/*#__PURE__*/_jsx(\"br\",{})]},questionId);}),isFristPage?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setPage(page-1);},children:\"\\uC774\\uC804\"}):null,\";\",isLastPage?/*#__PURE__*/_jsx(\"button\",{onClick:nextPage,children:\"\\uACB0\\uACFC\\uBCF4\\uAE30\"}):/*#__PURE__*/_jsx(\"button\",{onClick:nextPage,children:\"\\uB2E4\\uC74C\"}),/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/result\",element:/*#__PURE__*/_jsx(Result,{answers:answer})})})]});}export default Main;","map":{"version":3,"names":["useState","Form","data","Routes","Route","Link","useNavigate","Result","React","jsx","_jsx","jsxs","_jsxs","Main","_useState","_useState2","_slicedToArray","answer","setAnswer","_useState3","_useState4","num","setNum","_useState5","_useState6","page","setPage","totalPage","start","end","curPage","slice","isLastPage","length","isFristPage","navigate","nextPage","ques","filter","test","concat","id","map","question","alert","join","change","questionId","value","_objectSpread","_defineProperty","children","text","style","marginRight","Check","inline","name","type","onChange","checked","onClick","path","element","answers"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Main.js"],"sourcesContent":["import {  useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport data from \"../data.js\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport Result from \"./Result.js\";\r\nimport React from 'react';\r\n\r\nfunction Main() {\r\n  let [answer, setAnswer] = useState({});\r\n  let [num, setNum] = useState([]);\r\n  let [page, setPage] = useState(1);\r\n  let totalPage = 5; // 한 페이지에 표시할 질문의 수를 나타내는 변수\r\n  \r\n  let start = (page - 1) * totalPage;\r\n  let end = start + totalPage;\r\n  let curPage = data.slice(start, end);\r\n  const isLastPage = end >= data.length;\r\n  const isFristPage = start !== 0 ;\r\n  let navigate = useNavigate();\r\n\r\n  \r\n\r\n  const nextPage = () => {\r\n    let ques = data\r\n      .slice(start, end)\r\n      .filter((test) => !answer[`question_${test.id}`]);\r\n\r\n    if (ques.length > 0) {\r\n      const num = ques.map((question) => question.id);\r\n      setNum(num);\r\n      alert(`${num.join(\", \")} 번 질문에 답변해주세요!`);\r\n    } else {\r\n      if (isLastPage) {\r\n        navigate('/result');\r\n        \r\n      } else {\r\n        setPage(page + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const change = (questionId, value) => {\r\n    setAnswer({\r\n      ...answer,\r\n      [questionId]: value\r\n    });\r\n  };\r\n\r\n  // let totalScore = (questionId, value) => {\r\n  //   // 문항 4, 5, 7, 8에 대한 규칙\r\n  //   const spec = [4, 5, 7, 8];\r\n\r\n  //   // 선택한 값에 따라 점수를 설정\r\n  //   let score;\r\n  //   if (spec.includes(questionId)) {\r\n  //     switch (value) {\r\n  //       case '전혀':\r\n  //         score = 3;\r\n  //         break;\r\n  //       case '가끔':\r\n  //         score = 2;\r\n  //         break;\r\n  //       case '자주':\r\n  //         score = 1;\r\n  //         break;\r\n  //       case '항상':\r\n  //         score = 0;\r\n  //         break;\r\n  //       default:\r\n  //         score = 0;\r\n  //     }\r\n  //   } else {\r\n  //     switch (value) {\r\n  //       case '전혀':\r\n  //         score = 0;\r\n  //         break;\r\n  //       case '가끔':\r\n  //         score = 1;\r\n  //         break;\r\n  //       case '자주':\r\n  //         score = 2;\r\n  //         break;\r\n  //       case '항상':\r\n  //         score = 3;\r\n  //         break;\r\n  //       default:\r\n  //         score = 0;\r\n  //     }\r\n  //   }\r\n\r\n    \r\n\r\n  //   setAnswer({ ...answer, [questionId]: score });\r\n\r\n    \r\n  // };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>스트레스 자가 진단</h1>\r\n      <br />\r\n      {curPage.map(function (test) {\r\n        const questionId = `question_${test.id}`;\r\n        return (\r\n          <div key={questionId}>\r\n            <h4 >\r\n              {test.id}. {test.text}\r\n            </h4>\r\n            <br />\r\n            <h4>\r\n              <Form>\r\n                {['전혀', '가끔', '자주', '항상'].map((value) => (\r\n                  <label key={value} style={{ marginRight: '10px' }}>\r\n                    <Form.Check\r\n                      // className=\"radi\"\r\n                      inline\r\n                      name={questionId}\r\n                      type=\"radio\"\r\n                      value={value}\r\n                      onChange={() => change(questionId, value)}\r\n                      checked={answer[questionId] === value}\r\n                    />\r\n                    {value}\r\n                  </label>\r\n                ))}\r\n              </Form>\r\n            </h4>\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n\r\n {isFristPage ? (\r\n    <button onClick={()=>{setPage(page-1)}}>이전</button>\r\n ) : null\r\n};\r\n\r\n      {isLastPage ? (\r\n        <button onClick={nextPage}>결과보기</button>\r\n      ) : (\r\n        <button onClick={nextPage}>다음</button>\r\n      )}\r\n\r\n     {/* 결과 페이지 */}\r\n     <Routes>\r\n     <Route path='/result' element={<Result answers={answer} />} />\r\n      </Routes>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
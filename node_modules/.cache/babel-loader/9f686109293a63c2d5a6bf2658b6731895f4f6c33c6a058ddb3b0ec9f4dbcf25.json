{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\List.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import {useLocation} from 'react-router-dom';\n// import axios from \"axios\";\n// import Table from \"react-bootstrap/Table\";\n// import Button from \"react-bootstrap/Button\";\n// import Board from './Board';\n\n// function List(props) {\n\n//   const [boardList , setBoardList] = useState([]);\n//   const location = useLocation();\n//   const { title, who, content } = location.state;\n//   const newPost = location.state;\n\n//   // function GetData() {\n//   //   const [data, setData] = useState({});\n//   //   useEffect(() => {\n//   //     axios.post('http://localhost:4000/').then((response)=> {\n//   //       setData(response.data);\n//   //     })\n//   //   }, []);\n\n//   return (\n//     <div>\n//       <Table striped bordered hover>\n//         <thead>\n//           <tr>\n//             <th>번호</th>\n//             <th>제목</th>\n//             <th>작성자</th>\n//             <th>내용</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n\n//           {newPost.map((item, key) => (\n//             <tr key={key}>\n//               <td>{item.BOARD_NUMBER}</td>\n//               <td>{item.TITLE}</td>\n//               <td>{item.WRITER}</td>\n//               <td>{item.CONTENT}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//       <Button variant=\"info\">글쓰기</Button>\n//       <Button variant=\"secondary\">수정하기</Button>\n//       <Button variant=\"danger\">삭제하기</Button>\n//     </div>\n//   );\n// }\n\n// export default List;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport CommonTable from './CommonTable';\nimport CommonTableColumn from './CommonTableColumn';\nimport CommonTableRow from './CommonTableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = props => {\n  _s();\n  const [dataList, setDataList] = useState([]);\n  useEffect(() => {\n    setDataList(postList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CommonTable, {\n      headersName: ['글번호', '제목', '등록일', '조회수'],\n      children: dataList ? dataList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(CommonTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(CommonTableColumn, {\n            children: item.no\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CommonTableColumn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CommonTableColumn, {\n            children: item.createDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CommonTableColumn, {\n            children: item.readCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(List, \"Al5cK2m5y8aiy0ynb08KmLfiDSM=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","Link","CommonTable","CommonTableColumn","CommonTableRow","jsxDEV","_jsxDEV","Fragment","_Fragment","List","props","_s","dataList","setDataList","postList","children","headersName","map","item","index","no","fileName","_jsxFileName","lineNumber","columnNumber","createDate","readCount","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/List.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import {useLocation} from 'react-router-dom';\r\n// import axios from \"axios\";\r\n// import Table from \"react-bootstrap/Table\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Board from './Board';\r\n\r\n\r\n// function List(props) {\r\n  \r\n//   const [boardList , setBoardList] = useState([]);\r\n//   const location = useLocation();\r\n//   const { title, who, content } = location.state;\r\n//   const newPost = location.state;\r\n\r\n//   // function GetData() {\r\n//   //   const [data, setData] = useState({});\r\n//   //   useEffect(() => {\r\n//   //     axios.post('http://localhost:4000/').then((response)=> {\r\n//   //       setData(response.data);\r\n//   //     })\r\n//   //   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <Table striped bordered hover>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>번호</th>\r\n//             <th>제목</th>\r\n//             <th>작성자</th>\r\n//             <th>내용</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n\r\n//           {newPost.map((item, key) => (\r\n//             <tr key={key}>\r\n//               <td>{item.BOARD_NUMBER}</td>\r\n//               <td>{item.TITLE}</td>\r\n//               <td>{item.WRITER}</td>\r\n//               <td>{item.CONTENT}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </Table>\r\n//       <Button variant=\"info\">글쓰기</Button>\r\n//       <Button variant=\"secondary\">수정하기</Button>\r\n//       <Button variant=\"danger\">삭제하기</Button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// export default List;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CommonTable from './CommonTable';\r\nimport CommonTableColumn from './CommonTableColumn'\r\nimport CommonTableRow from './CommonTableRow'\r\n\r\nconst List = props => {\r\n  const [ dataList, setDataList ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setDataList(postList);\r\n  }, [ ])\r\n\r\n  return (\r\n    <>\r\n      <CommonTable headersName={['글번호', '제목', '등록일', '조회수']}>\r\n        {\r\n          dataList ? dataList.map((item, index) => {\r\n            return (\r\n              <CommonTableRow key={index}>\r\n                <CommonTableColumn>{ item.no }</CommonTableColumn>\r\n                <CommonTableColumn>\r\n                </CommonTableColumn>\r\n                <CommonTableColumn>{ item.createDate }</CommonTableColumn>\r\n                <CommonTableColumn>{ item.readCount }</CommonTableColumn>\r\n              </CommonTableRow>\r\n            )\r\n          }) : ''\r\n        }\r\n      </CommonTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,IAAI,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACpB,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACda,WAAW,CAACC,QAAQ,CAAC;EACvB,CAAC,EAAE,EAAG,CAAC;EAEP,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACJ,WAAW;MAACc,WAAW,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE;MAAAD,QAAA,EAElDH,QAAQ,GAAGA,QAAQ,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACvC,oBACEb,OAAA,CAACF,cAAc;UAAAW,QAAA,gBACbT,OAAA,CAACH,iBAAiB;YAAAY,QAAA,EAAGG,IAAI,CAACE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC,eAClDlB,OAAA,CAACH,iBAAiB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACpBlB,OAAA,CAACH,iBAAiB;YAAAY,QAAA,EAAGG,IAAI,CAACO;UAAU;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC,eAC1DlB,OAAA,CAACH,iBAAiB;YAAAY,QAAA,EAAGG,IAAI,CAACQ;UAAS;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC;QAAA,GALtCL,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CAAC;MAErB,CAAC,CAAC,GAAG;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC,gBACd,CAAC;AAEP,CAAC;AAAAb,EAAA,CA1BKF,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
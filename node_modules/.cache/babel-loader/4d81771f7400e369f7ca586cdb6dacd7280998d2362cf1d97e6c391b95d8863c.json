{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Main from './Main';\nimport { useLocation } from 'react-router-dom';\nfunction Result(props) {\n  _s();\n  const location = useLocation();\n\n  // const arr = location.state.arr;\n  const answer = location.state.answer;\n  console.log(props.answer);\n  // 결과를 계산할 때 사용할 상태 변수\n  // let [score, totalScore] = useState(0);\n\n  // const spec = [4, 5, 7, 8];\n\n  //   if (spec.includes(answer)) {\n  //     switch (answer) {\n  //       case '전혀':\n  //         score = 3;\n  //         break;\n  //       case '가끔':\n  //         score = 2;\n  //         break;\n  //       case '자주':\n  //         score = 1;\n  //         break;\n  //       case '항상':\n  //         score = 0;\n  //         break;\n  //       default:\n  //         score = 0;\n  //     }\n  //   } else {\n  //     switch (answer) {\n  //       case '전혀':\n  //         score = 0;\n  //         break;\n  //       case '가끔':\n  //         score = 1;\n  //         break;\n  //       case '자주':\n  //         score = 2;\n  //         break;\n  //       case '항상':\n  //         score = 3;\n  //         break;\n  //       default:\n  //         score = 0;\n  //     }\n  //   }\n\n  //   totalScore += score;\n\n  //   console.log(Result.totalScore);\n}\n_s(Result, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","Main","useLocation","Result","props","_s","location","answer","state","console","log","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport Main from './Main';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nfunction Result (props)  {\r\n\r\n  const location = useLocation();\r\n\r\n  // const arr = location.state.arr;\r\n  const answer = location.state.answer;\r\n  console.log(props.answer);\r\n // 결과를 계산할 때 사용할 상태 변수\r\n  // let [score, totalScore] = useState(0);\r\n  \r\n\r\n\r\n  // const spec = [4, 5, 7, 8];\r\n\r\n  //   if (spec.includes(answer)) {\r\n  //     switch (answer) {\r\n  //       case '전혀':\r\n  //         score = 3;\r\n  //         break;\r\n  //       case '가끔':\r\n  //         score = 2;\r\n  //         break;\r\n  //       case '자주':\r\n  //         score = 1;\r\n  //         break;\r\n  //       case '항상':\r\n  //         score = 0;\r\n  //         break;\r\n  //       default:\r\n  //         score = 0;\r\n  //     }\r\n  //   } else {\r\n  //     switch (answer) {\r\n  //       case '전혀':\r\n  //         score = 0;\r\n  //         break;\r\n  //       case '가끔':\r\n  //         score = 1;\r\n  //         break;\r\n  //       case '자주':\r\n  //         score = 2;\r\n  //         break;\r\n  //       case '항상':\r\n  //         score = 3;\r\n  //         break;\r\n  //       default:\r\n  //         score = 0;\r\n  //     }\r\n  //   }\r\n    \r\n  //   totalScore += score;\r\n    \r\n    \r\n    \r\n  //   console.log(Result.totalScore);\r\n  }\r\n  \r\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,SAASC,MAAMA,CAAEC,KAAK,EAAG;EAAAC,EAAA;EAEvB,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMK,MAAM,GAAGD,QAAQ,CAACE,KAAK,CAACD,MAAM;EACpCE,OAAO,CAACC,GAAG,CAACN,KAAK,CAACG,MAAM,CAAC;EAC1B;EACC;;EAIA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAIA;AACA;AAACF,EAAA,CAvDMF,MAAM;EAAA,QAEID,WAAW;AAAA;AAAAS,EAAA,GAFrBR,MAAM;AAyDf,eAAeA,MAAM;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
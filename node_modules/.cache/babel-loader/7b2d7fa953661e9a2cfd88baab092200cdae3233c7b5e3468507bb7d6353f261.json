{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Result.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { calculateScore } from './Calculate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Result({\n  userAnswers\n}) {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n\n  // 사용자 답변이 업데이트될 때마다 총 점수를 계산합니다.\n  useEffect(() => {\n    let score = 0;\n\n    // 사용자 답변 배열을 순회하며 각 답변의 점수를 계산하여 더합니다.\n    userAnswers.forEach(({\n      questionId,\n      value\n    }) => {\n      const questionScore = calculateScore(questionId, value);\n      score += questionScore;\n    });\n\n    // 총 점수를 설정합니다.\n    setTotalScore(score);\n  }, [userAnswers]); // userAnswers 배열이 업데이트될 때만 실행됩니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \\uCD1D \\uC810\\uC218 : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Result, \"iZIDLtwW1lZXw1rrEFZloKZx7wQ=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","calculateScore","jsxDEV","_jsxDEV","Result","userAnswers","_s","totalScore","setTotalScore","score","forEach","questionId","value","questionScore","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { calculateScore } from './Calculate';\r\n\r\nfunction Result({ userAnswers }) {\r\n  const [totalScore, setTotalScore] = useState(0);\r\n\r\n  // 사용자 답변이 업데이트될 때마다 총 점수를 계산합니다.\r\n  useEffect(() => {\r\n    let score = 0;\r\n\r\n    // 사용자 답변 배열을 순회하며 각 답변의 점수를 계산하여 더합니다.\r\n    userAnswers.forEach(({ questionId, value }) => {\r\n      const questionScore = calculateScore(questionId, value);\r\n      score += questionScore;\r\n    });\r\n\r\n    // 총 점수를 설정합니다.\r\n    setTotalScore(score);\r\n  }, [userAnswers]); // userAnswers 배열이 업데이트될 때만 실행됩니다.\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>결과</h1>\r\n      <div> 총 점수 : </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,cAAc,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,MAAMA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,GAAG,CAAC;;IAEb;IACAJ,WAAW,CAACK,OAAO,CAAC,CAAC;MAAEC,UAAU;MAAEC;IAAM,CAAC,KAAK;MAC7C,MAAMC,aAAa,GAAGZ,cAAc,CAACU,UAAU,EAAEC,KAAK,CAAC;MACvDH,KAAK,IAAII,aAAa;IACxB,CAAC,CAAC;;IAEF;IACAL,aAAa,CAACC,KAAK,CAAC;EACtB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAGnB,oBACEF,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACXf,OAAA;MAAAW,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACZ,EAAA,CAxBQF,MAAM;AAAAe,EAAA,GAANf,MAAM;AA0Bf,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
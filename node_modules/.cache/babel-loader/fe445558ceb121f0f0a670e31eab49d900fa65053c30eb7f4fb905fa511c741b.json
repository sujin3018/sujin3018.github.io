{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Board from './Board';\n\n// function List(props) {\n//   const [data, setData] = useState([]);\n//   useEffect(() => {\n//     axios.get('http://localhost:4000/Board')\n//     .then((response) => {\n//       setData(response.data); // 서버에서 받은 데이터를 상태 변수에 저장\n//       console.log(response.data);\n//     })\n//     .catch((error) => {\n//       console.error('데이터 가져오기 중 오류 발생:', error);\n//     });\n//   }, []); \n\nconst Data = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const getData = async () => {\n    const resp = await (await axios.get('http://localhost:4000/Board')).data; // 2) 게시글 목록 데이터에 할당  \n    setData(resp.data); // 3) 변수에 할당\n    console.log(data);\n  };\n  useEffect(() => {\n    getData(); // 1) 게시글 목록 조회 함수 호출\n  }, []);\n\n  // return (\n  //   <div>\n  //     <Table striped bordered hover>\n  //       <thead>\n  //         <tr>\n  //           <th>번호</th>\n  //           <th>제목</th>\n  //           <th>내용</th>\n  //           <th>작성자</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n\n  //       {\n  //       Data.map((a, i) => (\n  //           <tr key={i}>\n  //             <td>{i + 1}</td>\n  //             <td>{a.title}</td>\n  //             <td>{a.content}</td>\n  //             <td>{a.who}</td>\n  //           </tr>\n  //         ))}\n\n  //       </tbody>\n  //     </Table>\n  //     <Button variant=\"info\">글쓰기</Button>\n  //     <Button variant=\"secondary\">수정하기</Button>\n  //     <Button variant=\"danger\">삭제하기</Button>\n  //   </div>\n  // );\n};\n_s(Data, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","Table","Button","Board","Data","_s","data","setData","getData","resp","get","console","log","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/List.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Board from './Board';\r\n\r\n\r\n  // function List(props) {\r\n  //   const [data, setData] = useState([]);\r\n  //   useEffect(() => {\r\n  //     axios.get('http://localhost:4000/Board')\r\n  //     .then((response) => {\r\n  //       setData(response.data); // 서버에서 받은 데이터를 상태 변수에 저장\r\n  //       console.log(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error('데이터 가져오기 중 오류 발생:', error);\r\n  //     });\r\n  //   }, []); \r\n\r\n  const Data = () => {\r\n    const [data, setData] = useState([]);\r\n  \r\n    const getData = async () => {\r\n      const resp = await (await axios.get('http://localhost:4000/Board')).data; // 2) 게시글 목록 데이터에 할당  \r\n      setData(resp.data); // 3) 변수에 할당\r\n      console.log(data);\r\n    }\r\n  \r\n    useEffect(() => {\r\n      getData(); // 1) 게시글 목록 조회 함수 호출\r\n    }, []);\r\n\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <Table striped bordered hover>\r\n  //       <thead>\r\n  //         <tr>\r\n  //           <th>번호</th>\r\n  //           <th>제목</th>\r\n  //           <th>내용</th>\r\n  //           <th>작성자</th>\r\n  //         </tr>\r\n  //       </thead>\r\n  //       <tbody>\r\n\r\n  //       {\r\n  //       Data.map((a, i) => (\r\n  //           <tr key={i}>\r\n  //             <td>{i + 1}</td>\r\n  //             <td>{a.title}</td>\r\n  //             <td>{a.content}</td>\r\n  //             <td>{a.who}</td>\r\n  //           </tr>\r\n  //         ))}\r\n\r\n  //       </tbody>\r\n  //     </Table>\r\n  //     <Button variant=\"info\">글쓰기</Button>\r\n  //     <Button variant=\"secondary\">수정하기</Button>\r\n  //     <Button variant=\"danger\">삭제하기</Button>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default Data;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,SAAS;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC,EAAEJ,IAAI,CAAC,CAAC;IAC1EC,OAAO,CAACE,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;IACpBK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACnB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdU,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAAH,EAAA,CA5COD,IAAI;AAAAS,EAAA,GAAJT,IAAI;AA8CZ,eAAeA,IAAI;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
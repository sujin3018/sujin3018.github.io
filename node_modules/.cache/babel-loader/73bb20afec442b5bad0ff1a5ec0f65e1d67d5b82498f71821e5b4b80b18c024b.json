{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Result({\n  values\n}) {\n  _s();\n  // 결과를 계산할 때 사용할 상태 변수\n  const [totalScore, setTotalScore] = useState(0);\n\n  // 사용자의 답변을 기반으로 결과를 계산하는 함수\n  const calculateScore = (questionId, value) => {\n    const spec = [4, 5, 7, 8];\n    let score;\n    if (spec.includes(questionId)) {\n      switch (value) {\n        case '전혀':\n          score = 3;\n          break;\n        case '가끔':\n          score = 2;\n          break;\n        case '자주':\n          score = 1;\n          break;\n        case '항상':\n          score = 0;\n          break;\n        default:\n          score = 0;\n        // 기본값 설정\n      }\n    } else {\n      switch (value) {\n        case '전혀':\n          score = 0;\n          break;\n        case '가끔':\n          score = 1;\n          break;\n        case '자주':\n          score = 2;\n          break;\n        case '항상':\n          score = 3;\n          break;\n        default:\n          score = 0;\n        // 기본값 설정\n      }\n    }\n\n    return score;\n  };\n\n  // values 배열의 각 항목에 대해 calculateScore 함수를 적용하고 합산하여 결과를 계산\n  useEffect(() => {\n    let calculatedScore = 0;\n    for (let i = 0; i < values.length; i++) {\n      const item = values[i];\n      calculatedScore += calculateScore(item.questionId, item.value);\n    }\n    setTotalScore(calculatedScore);\n  }, [values]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uCD1D \\uC810\\uC218: \", totalScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Result, \"iZIDLtwW1lZXw1rrEFZloKZx7wQ=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Result","values","_s","totalScore","setTotalScore","calculateScore","questionId","value","spec","score","includes","calculatedScore","i","length","item","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Result({ values }) {\r\n  // 결과를 계산할 때 사용할 상태 변수\r\n  const [totalScore, setTotalScore] = useState(0);\r\n\r\n  // 사용자의 답변을 기반으로 결과를 계산하는 함수\r\n  const calculateScore = (questionId, value) => {\r\n    const spec = [4, 5, 7, 8];\r\n    let score;\r\n\r\n    if (spec.includes(questionId)) {\r\n      switch (value) {\r\n        case '전혀':\r\n          score = 3;\r\n          break;\r\n        case '가끔':\r\n          score = 2;\r\n          break;\r\n        case '자주':\r\n          score = 1;\r\n          break;\r\n        case '항상':\r\n          score = 0;\r\n          break;\r\n        default:\r\n          score = 0; // 기본값 설정\r\n      }\r\n    } else {\r\n      switch (value) {\r\n        case '전혀':\r\n          score = 0;\r\n          break;\r\n        case '가끔':\r\n          score = 1;\r\n          break;\r\n        case '자주':\r\n          score = 2;\r\n          break;\r\n        case '항상':\r\n          score = 3;\r\n          break;\r\n        default:\r\n          score = 0; // 기본값 설정\r\n      }\r\n    }\r\n\r\n    return score;\r\n  };\r\n\r\n  // values 배열의 각 항목에 대해 calculateScore 함수를 적용하고 합산하여 결과를 계산\r\n  useEffect(() => {\r\n    let calculatedScore = 0;\r\n    for (let i = 0; i < values.length; i++) {\r\n      const item = values[i];\r\n      calculatedScore += calculateScore(item.questionId, item.value);\r\n    }\r\n    setTotalScore(calculatedScore);\r\n  }, [values]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>결과</h1>\r\n      <p>총 점수: {totalScore}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMS,cAAc,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IAC5C,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,IAAIC,KAAK;IAET,IAAID,IAAI,CAACE,QAAQ,CAACJ,UAAU,CAAC,EAAE;MAC7B,QAAQC,KAAK;QACX,KAAK,IAAI;UACPE,KAAK,GAAG,CAAC;UACT;QACF,KAAK,IAAI;UACPA,KAAK,GAAG,CAAC;UACT;QACF,KAAK,IAAI;UACPA,KAAK,GAAG,CAAC;UACT;QACF,KAAK,IAAI;UACPA,KAAK,GAAG,CAAC;UACT;QACF;UACEA,KAAK,GAAG,CAAC;QAAE;MACf;IACF,CAAC,MAAM;MACL,QAAQF,KAAK;QACX,KAAK,IAAI;UACPE,KAAK,GAAG,CAAC;UACT;QACF,KAAK,IAAI;UACPA,KAAK,GAAG,CAAC;UACT;QACF,KAAK,IAAI;UACPA,KAAK,GAAG,CAAC;UACT;QACF,KAAK,IAAI;UACPA,KAAK,GAAG,CAAC;UACT;QACF;UACEA,KAAK,GAAG,CAAC;QAAE;MACf;IACF;;IAEA,OAAOA,KAAK;EACd,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIc,eAAe,GAAG,CAAC;IACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,IAAI,GAAGb,MAAM,CAACW,CAAC,CAAC;MACtBD,eAAe,IAAIN,cAAc,CAACS,IAAI,CAACR,UAAU,EAAEQ,IAAI,CAACP,KAAK,CAAC;IAChE;IACAH,aAAa,CAACO,eAAe,CAAC;EAChC,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACXpB,OAAA;MAAAgB,QAAA,GAAG,uBAAM,EAACZ,UAAU;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACjB,EAAA,CAhEQF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAkEf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
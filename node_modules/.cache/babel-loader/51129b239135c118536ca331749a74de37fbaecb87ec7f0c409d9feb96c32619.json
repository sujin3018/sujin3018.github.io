{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport data from \"../data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [answer, setAnswer] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2A4\\uD2B8\\uB808\\uC2A4 \\uC790\\uAC00 \\uC9C4\\uB2E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), data.map(function (test) {\n      const questionId = `question_${test.id}`; // questionId를 올바르게 설정\n      const unanswered = !answer[questionId]; // 현재 질문에 대한 답변 확인\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontWeight: \"600\"\n          },\n          children: [test.id, \". \", test.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                name: questionId,\n                type: type,\n                onChange: e => {\n                  // 각 질문에 대한 답변을 업데이트할 때 setAnswer 사용\n                  setAnswer({\n                    ...answer,\n                    [questionId]: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 23\n              }, this), \"\\uC804\\uD600\", /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                name: questionId,\n                type: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 23\n              }, this), \"\\uAC00\\uB054\", /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                type: type,\n                name: questionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 23\n              }, this), \"\\uAC70\\uC758\", /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                type: type,\n                name: questionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this), \"\\uC790\\uC8FC\", /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                type: type,\n                name: questionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this), \"\\uB9E4\\uC6B0\\uC790\\uC8FC\"]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), unanswered && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC774 \\uC9C8\\uBB38\\uC5D0 \\uB2F5\\uBCC0\\uD574\\uC8FC\\uC138\\uC694!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, questionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const unansweredQuestions = data.filter(test => !answer[`question_${test.id}`]);\n        if (unansweredQuestions.length > 0) {\n          alert('모든 질문에 답변해주세요!');\n        } else {\n          // 다음 단계로 이동하는 로직을 추가하세요.\n          // 예: 다음 질문 표시 또는 결과 페이지로 이동\n        }\n      },\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"KJD1K8sSswfZiaJuq6GzpwCZvc0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","Form","data","jsxDEV","_jsxDEV","Main","_s","answer","setAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","test","questionId","id","unanswered","style","whiteSpace","fontWeight","text","type","className","Check","inline","name","onChange","e","target","value","onClick","unansweredQuestions","filter","length","alert","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Main.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport data from \"../data.js\";\r\n\r\nfunction Main() {\r\n  const [answer, setAnswer] = useState({});\r\n\r\n  return (\r\n    <div>\r\n      <h1>스트레스 자가 진단</h1>\r\n      <br/>\r\n      {\r\n        data.map(function(test) {\r\n          const questionId = `question_${test.id}`; // questionId를 올바르게 설정\r\n          const unanswered = !answer[questionId]; // 현재 질문에 대한 답변 확인\r\n\r\n          return (\r\n            <div style={{ whiteSpace: 'pre-wrap' }} key={questionId}>\r\n              <h4 style={{ fontWeight: \"600\" }}>{test.id}. {test.text}</h4>\r\n              <br/>\r\n              <h4>\r\n                <Form>\r\n                  {[ 'radio'].map((type) => (\r\n                    <div className=\"mb-3\" key={type}>\r\n                      <Form.Check \r\n                        inline\r\n                        name={questionId}\r\n                        type={type}\r\n                        onChange={(e) => {\r\n                          // 각 질문에 대한 답변을 업데이트할 때 setAnswer 사용\r\n                          setAnswer({\r\n                            ...answer,\r\n                            [questionId]: e.target.value\r\n                          });\r\n                        }}\r\n                      />전혀\r\n                      <Form.Check\r\n                        inline\r\n                        name={questionId}\r\n                        type={type}\r\n                      />가끔\r\n                      <Form.Check\r\n                        inline\r\n                        type={type}\r\n                        name={questionId}\r\n                      />거의\r\n                      <Form.Check\r\n                        inline\r\n                        type={type}\r\n                        name={questionId}\r\n                      />자주\r\n                      <Form.Check\r\n                        inline\r\n                        type={type}\r\n                        name={questionId}\r\n                      />매우자주\r\n                    </div>\r\n                  ))}\r\n                </Form>\r\n              </h4>\r\n              <br/>\r\n              {unanswered && (\r\n                <p>이 질문에 답변해주세요!</p>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n      <button onClick={() => {\r\n        const unansweredQuestions = data.filter((test) => !answer[`question_${test.id}`]);\r\n        if (unansweredQuestions.length > 0) {\r\n          alert('모든 질문에 답변해주세요!');\r\n        } else {\r\n          // 다음 단계로 이동하는 로직을 추가하세요.\r\n          // 예: 다음 질문 표시 또는 결과 페이지로 이동\r\n        }\r\n      }}>다음</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
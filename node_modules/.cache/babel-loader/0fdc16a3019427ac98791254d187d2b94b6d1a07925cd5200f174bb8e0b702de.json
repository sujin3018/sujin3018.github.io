{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport data from \"../data.js\";\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [answers, setAnswers] = useState({}); // 라디오 버튼 상태를 저장하는 상태 변수\n  const [page, setPage] = useState(1);\n  const totalPage = 5;\n  const start = (page - 1) * totalPage;\n  const end = start + totalPage;\n  const curPage = data.slice(start, end);\n  const isLastPage = end >= data.length;\n  const isFirstPage = start === 0;\n  const navigate = useNavigate();\n\n  // 페이지가 변경될 때 이전 페이지의 라디오 버튼 상태를 저장하고, 현재 페이지의 상태를 불러옴\n  useEffect(() => {\n    const currentPageAnswers = {};\n    curPage.forEach(test => {\n      const questionId = `question_${test.id}`;\n      currentPageAnswers[questionId] = answers[questionId] || \"\";\n    });\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      ...currentPageAnswers\n    }));\n  }, [page]);\n  const nextPage = () => {\n    const unansweredQuestions = data.slice(start, end).filter(test => !answers[`question_${test.id}`]);\n    if (unansweredQuestions.length > 0) {\n      const num = unansweredQuestions.map(question => question.id);\n      alert(`${num.join(\", \")} 번 질문에 답변해주세요!`);\n    } else {\n      if (isLastPage) {\n        navigate('/result');\n      } else {\n        setPage(page + 1);\n      }\n    }\n  };\n  const handlePreviousPage = () => {\n    if (!isFirstPage) {\n      setPage(page - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2A4\\uD2B8\\uB808\\uC2A4 \\uC790\\uAC00 \\uC9C4\\uB2E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), curPage.map(function (test) {\n      const questionId = `question_${test.id}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [test.id, \". \", test.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                className: \"radi\",\n                inline: true,\n                name: questionId,\n                type: type,\n                value: \"\\uC804\\uD600\",\n                onChange: e => {\n                  setAnswers({\n                    ...answers,\n                    [questionId]: e.target.value\n                  });\n                },\n                checked: answers[questionId] === \"전혀\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), \"\\uC804\\uD600\"]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, questionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    }), isFirstPage ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousPage,\n      children: \"\\uC774\\uC804\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), isLastPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPage,\n      children: \"\\uACB0\\uACFC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPage,\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"I3KrfxQGB9v/iKEJWrIsf4bhPZ8=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","Form","data","Routes","Route","Link","useNavigate","jsxDEV","_jsxDEV","Main","_s","answers","setAnswers","page","setPage","totalPage","start","end","curPage","slice","isLastPage","length","isFirstPage","navigate","currentPageAnswers","forEach","test","questionId","id","prevAnswers","nextPage","unansweredQuestions","filter","num","map","question","alert","join","handlePreviousPage","children","fileName","_jsxFileName","lineNumber","columnNumber","text","type","className","Check","inline","name","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Main.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport data from \"../data.js\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction Main() {\r\n  const [answers, setAnswers] = useState({}); // 라디오 버튼 상태를 저장하는 상태 변수\r\n  const [page, setPage] = useState(1);\r\n  const totalPage = 5;\r\n  const start = (page - 1) * totalPage;\r\n  const end = start + totalPage;\r\n  const curPage = data.slice(start, end);\r\n  const isLastPage = end >= data.length;\r\n  const isFirstPage = start === 0;\r\n  const navigate = useNavigate();\r\n\r\n  // 페이지가 변경될 때 이전 페이지의 라디오 버튼 상태를 저장하고, 현재 페이지의 상태를 불러옴\r\n  useEffect(() => {\r\n    const currentPageAnswers = {};\r\n    curPage.forEach((test) => {\r\n      const questionId = `question_${test.id}`;\r\n      currentPageAnswers[questionId] = answers[questionId] || \"\";\r\n    });\r\n    setAnswers((prevAnswers) => ({ ...prevAnswers, ...currentPageAnswers }));\r\n  }, [page]);\r\n\r\n  const nextPage = () => {\r\n    const unansweredQuestions = data.slice(start, end).filter((test) => !answers[`question_${test.id}`]);\r\n\r\n    if (unansweredQuestions.length > 0) {\r\n      const num = unansweredQuestions.map((question) => question.id);\r\n      alert(`${num.join(\", \")} 번 질문에 답변해주세요!`);\r\n    } else {\r\n      if (isLastPage) {\r\n        navigate('/result');\r\n      } else {\r\n        setPage(page + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (!isFirstPage) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>스트레스 자가 진단</h1>\r\n      <br />\r\n      {curPage.map(function (test) {\r\n        const questionId = `question_${test.id}`;\r\n        return (\r\n          <div key={questionId}>\r\n            <h4 >\r\n              {test.id}. {test.text}\r\n            </h4>\r\n            <br />\r\n            <h4>\r\n              <Form>\r\n                {['radio'].map((type) => (\r\n                  <div className=\"mb-3\" key={type}>\r\n                    <Form.Check\r\n                      className=\"radi\"\r\n                      inline\r\n                      name={questionId}\r\n                      type={type}\r\n                      value=\"전혀\"\r\n                      onChange={(e) => {\r\n                        setAnswers({\r\n                          ...answers,\r\n                          [questionId]: e.target.value\r\n                        });\r\n                      }}\r\n                      checked={answers[questionId] === \"전혀\"}\r\n                    />\r\n                    전혀\r\n                    {/* 나머지 라디오 버튼들도 같은 방식으로 구현 */}\r\n                  </div>\r\n                ))}\r\n              </Form>\r\n            </h4>\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {isFirstPage ? null : (\r\n        <button onClick={handlePreviousPage}>이전</button>\r\n      )}\r\n\r\n      {isLastPage ? (\r\n        <button onClick={nextPage}>결과보기</button>\r\n      ) : (\r\n        <button onClick={nextPage}>다음</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
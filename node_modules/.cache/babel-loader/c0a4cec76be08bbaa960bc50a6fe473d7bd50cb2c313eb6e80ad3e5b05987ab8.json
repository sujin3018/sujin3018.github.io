{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Main from './Main';\nimport { useLocation } from 'react-router-dom';\nfunction Result() {\n  _s();\n  const location = useLocation();\n  const newArray = location.state;\n  console.log(newArray);\n\n  //  //결과를 계산할 때 사용할 상태 변수\n  let [totalscore, setTotalScore] = useState(0);\n  let score = 0;\n  useEffect(() => {\n    if (Array.isArray(newArray.newArray)) {\n      const newData = newArray.newArray;\n      let score = 0;\n      newData.forEach(item => {\n        const [, value] = item;\n        const spec = [4, 5, 7, 8];\n        if (spec.includes(newData)) {\n          switch (value) {\n            case '전혀':\n              score += 3;\n              break;\n            case '가끔':\n              score += 2;\n              break;\n            case '자주':\n              score += 1;\n              break;\n            case '항상':\n              score += 0;\n              break;\n            default:\n              score += 0;\n          }\n        } else {\n          switch (value) {\n            case '전혀':\n              score += 0;\n              break;\n            case '가끔':\n              score += 1;\n              break;\n            case '자주':\n              score += 2;\n              break;\n            case '항상':\n              score += 3;\n              break;\n            default:\n              score += 0;\n          }\n        }\n      });\n      setTotalScore(prevTotalScore => prevTotalScore + score);\n    }\n  }, [newArray.newArray]);\n\n  // if (spec.includes(newArray)) {\n  //   switch (newArray) {\n  //     case '전혀':\n  //       score = 3;\n  //       break;\n  //     case '가끔':\n  //       score = 2;\n  //       break;\n  //     case '자주':\n  //       score = 1;\n  //       break;\n  //     case '항상':\n  //       score = 0;\n  //       break;\n  //     default:\n  //       score = 0;\n  //   }\n\n  // } else {\n  //   switch (newArray) {\n  //     case '전혀':\n  //       score = 0;\n  //       break;\n  //     case '가끔':\n  //       score = 1;\n  //       break;\n  //     case '자주':\n  //       score = 2;\n  //       break;\n  //     case '항상':\n  //       score = 3;\n  //       break;\n  //     default:\n  //       score = 0;\n  //   }\n\n  //   setTotalScore(totalscore + score);\n  // }\n\n  useEffect(() => {\n    // totalscore 상태 값 변경 후에 로그 출력\n    console.log(totalscore);\n  }, [totalscore]);\n}\n_s(Result, \"72FWZlqmBXjIA7KmVMIAVOVeorE=\", false, function () {\n  return [useLocation];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","Main","useLocation","Result","_s","location","newArray","state","console","log","totalscore","setTotalScore","score","Array","isArray","newData","forEach","item","value","spec","includes","prevTotalScore","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport Main from './Main';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nfunction Result ()  {\r\n\r\n  const location = useLocation();\r\n  const newArray = location.state;\r\n  console.log(newArray);\r\n  \r\n  //  //결과를 계산할 때 사용할 상태 변수\r\n  let [totalscore, setTotalScore] = useState(0);\r\n  let score = 0;\r\n  \r\n  useEffect(()=>{\r\n    if (Array.isArray(newArray.newArray)) {\r\n      const newData = newArray.newArray;\r\n      \r\n      let score = 0;\r\n      \r\n      newData.forEach((item)=>{\r\n        const [, value] = item;\r\n        \r\n        const spec = [4, 5, 7, 8];\r\n        if (spec.includes(newData)) {\r\n        switch (value) {\r\n          case '전혀':\r\n            score += 3;\r\n            break;\r\n          case '가끔':\r\n            score += 2;\r\n            break;\r\n          case '자주':\r\n            score += 1;\r\n            break;\r\n          case '항상':\r\n            score += 0;\r\n            break;\r\n          default:\r\n            score += 0;\r\n        }\r\n       }else {\r\n        switch (value) {\r\n              case '전혀':\r\n                score += 0;\r\n                break;\r\n              case '가끔':\r\n                score += 1;\r\n                break;\r\n              case '자주':\r\n                score += 2;\r\n                break;\r\n              case '항상':\r\n                score += 3;\r\n                break;\r\n              default:\r\n                score += 0;\r\n            }\r\n       }});\r\n       setTotalScore((prevTotalScore) => prevTotalScore + score);\r\n      }\r\n    }, [newArray.newArray]);\r\n      \r\n\r\n\r\n      // if (spec.includes(newArray)) {\r\n      //   switch (newArray) {\r\n      //     case '전혀':\r\n      //       score = 3;\r\n      //       break;\r\n      //     case '가끔':\r\n      //       score = 2;\r\n      //       break;\r\n      //     case '자주':\r\n      //       score = 1;\r\n      //       break;\r\n      //     case '항상':\r\n      //       score = 0;\r\n      //       break;\r\n      //     default:\r\n      //       score = 0;\r\n      //   }\r\n\r\n      // } else {\r\n      //   switch (newArray) {\r\n      //     case '전혀':\r\n      //       score = 0;\r\n      //       break;\r\n      //     case '가끔':\r\n      //       score = 1;\r\n      //       break;\r\n      //     case '자주':\r\n      //       score = 2;\r\n      //       break;\r\n      //     case '항상':\r\n      //       score = 3;\r\n      //       break;\r\n      //     default:\r\n      //       score = 0;\r\n      //   }\r\n    \r\n      //   setTotalScore(totalscore + score);\r\n      // }\r\n\r\n      useEffect(() => {\r\n        // totalscore 상태 값 변경 후에 로그 출력\r\n        console.log(totalscore);\r\n      }, [totalscore]);\r\n  }\r\n  \r\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,SAASC,MAAMA,CAAA,EAAK;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAMI,QAAQ,GAAGD,QAAQ,CAACE,KAAK;EAC/BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;;EAErB;EACA,IAAI,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,IAAIa,KAAK,GAAG,CAAC;EAEbZ,SAAS,CAAC,MAAI;IACZ,IAAIa,KAAK,CAACC,OAAO,CAACR,QAAQ,CAACA,QAAQ,CAAC,EAAE;MACpC,MAAMS,OAAO,GAAGT,QAAQ,CAACA,QAAQ;MAEjC,IAAIM,KAAK,GAAG,CAAC;MAEbG,OAAO,CAACC,OAAO,CAAEC,IAAI,IAAG;QACtB,MAAM,GAAGC,KAAK,CAAC,GAAGD,IAAI;QAEtB,MAAME,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,IAAIA,IAAI,CAACC,QAAQ,CAACL,OAAO,CAAC,EAAE;UAC5B,QAAQG,KAAK;YACX,KAAK,IAAI;cACPN,KAAK,IAAI,CAAC;cACV;YACF,KAAK,IAAI;cACPA,KAAK,IAAI,CAAC;cACV;YACF,KAAK,IAAI;cACPA,KAAK,IAAI,CAAC;cACV;YACF,KAAK,IAAI;cACPA,KAAK,IAAI,CAAC;cACV;YACF;cACEA,KAAK,IAAI,CAAC;UACd;QACD,CAAC,MAAK;UACL,QAAQM,KAAK;YACP,KAAK,IAAI;cACPN,KAAK,IAAI,CAAC;cACV;YACF,KAAK,IAAI;cACPA,KAAK,IAAI,CAAC;cACV;YACF,KAAK,IAAI;cACPA,KAAK,IAAI,CAAC;cACV;YACF,KAAK,IAAI;cACPA,KAAK,IAAI,CAAC;cACV;YACF;cACEA,KAAK,IAAI,CAAC;UACd;QACL;MAAC,CAAC,CAAC;MACHD,aAAa,CAAEU,cAAc,IAAKA,cAAc,GAAGT,KAAK,CAAC;IAC1D;EACF,CAAC,EAAE,CAACN,QAAQ,CAACA,QAAQ,CAAC,CAAC;;EAIrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAN,SAAS,CAAC,MAAM;IACd;IACAQ,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EACzB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;AACpB;AAACN,EAAA,CAxGMD,MAAM;EAAA,QAEID,WAAW;AAAA;AAAAoB,EAAA,GAFrBnB,MAAM;AA0Gf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
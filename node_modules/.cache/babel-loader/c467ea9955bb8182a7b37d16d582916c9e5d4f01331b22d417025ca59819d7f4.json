{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\BoardDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardDetail() {\n  _s();\n  let location = useLocation();\n  let [post, setPost] = useState([]); // 게시글 정보를 저장할 상태 변수\n  // const { newPost } = location.state;\n  // const {postId } = location.state;\n  const [detail, setDetail] = useState('');\n  let [pcount, tcount] = useState(0);\n  useEffect(() => {\n    axios.get('http://localhost:4000/Board').then(response => {\n      let data = response.data; // 서버에서 받은 데이터\n      setPost(data);\n      //console.log(data);\n    }).catch(error => {\n      console.error('이미지 가져오기 중 오류 발생:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(data).map((a, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: i + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data[a].BOARD_TITLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data[a].BOARD_CONTENT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data[a].BOARD_NAME\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this)\n  //   <div>\n  //   <h2>게시글 상세정보</h2> <br/>\n\n  //   <div className=\"post-view-row\">\n  //   <label>게시글 번호</label>\n  //   <label>{ post.no }</label>\n  //   </div>\n  //   <div className=\"post-view-row\">\n  //   <label>제목</label>\n  //   <label>{ post.title }</label>\n  //   </div>\n  //   <div className=\"post-view-row\">\n  //   <label>작성자</label>\n  //   <label>{ post.who }</label>\n  //   </div>\n  //   <div className=\"post-view-row\">\n  //   <label>조회수</label>\n  //   <label>{ pcount }</label>\n  //   </div>\n\n  //   <div >\n  //   <td/>\n  //    <div className='content'>\n  //  {\n  //   post.content\n  //    }\n  //    </div>\n\n  //   </div>\n  //   </div>\n  ;\n}\n\n/* <div className=\"post-view-row\">\r\n<label>첨부파일</label>\r\n{image && <img src={`data:image/jpeg;base64,${image}`} alt=\"이미지\" />}\r\n</div> */\n_s(BoardDetail, \"brEo94YbkmbyIygQIx6vFzsONKg=\", false, function () {\n  return [useLocation];\n});\n_c = BoardDetail;\nexport default BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","Link","useNavigate","useLocation","useParams","axios","useState","useEffect","Board","jsxDEV","_jsxDEV","BoardDetail","_s","location","post","setPost","detail","setDetail","pcount","tcount","get","then","response","data","catch","error","console","children","Object","keys","map","a","i","fileName","_jsxFileName","lineNumber","columnNumber","BOARD_TITLE","BOARD_CONTENT","BOARD_NAME","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/BoardDetail.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate , useLocation , useParams} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Board from './Board';\r\n\r\nfunction BoardDetail() {\r\n   \r\n    let location = useLocation();\r\n    let [post, setPost] = useState([]); // 게시글 정보를 저장할 상태 변수\r\n    // const { newPost } = location.state;\r\n    // const {postId } = location.state;\r\n    const [detail, setDetail] = useState('');\r\n    let [pcount , tcount] = useState(0);\r\n   \r\n\r\n    useEffect(() => {\r\n      axios.get('http://localhost:4000/Board')\r\n        .then((response) => {\r\n          let data = response.data; // 서버에서 받은 데이터\r\n          setPost(data);\r\n          //console.log(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('이미지 가져오기 중 오류 발생:', error);\r\n        });\r\n      }, []); \r\n\r\n   \r\n      return (\r\n        <div>\r\n        {\r\n          Object.keys(data).map((a, i) => (\r\n          <tr key={i}>\r\n          <td>{i +1 }</td>\r\n          <td>{data[a].BOARD_TITLE}</td>\r\n          <td>{data[a].BOARD_CONTENT}</td>\r\n          <td>{data[a].BOARD_NAME}</td>\r\n          </tr>\r\n           ))}\r\n           </div>\r\n      //   <div>\r\n      //   <h2>게시글 상세정보</h2> <br/>\r\n        \r\n      //   <div className=\"post-view-row\">\r\n      //   <label>게시글 번호</label>\r\n      //   <label>{ post.no }</label>\r\n      //   </div>\r\n      //   <div className=\"post-view-row\">\r\n      //   <label>제목</label>\r\n      //   <label>{ post.title }</label>\r\n      //   </div>\r\n      //   <div className=\"post-view-row\">\r\n      //   <label>작성자</label>\r\n      //   <label>{ post.who }</label>\r\n      //   </div>\r\n      //   <div className=\"post-view-row\">\r\n      //   <label>조회수</label>\r\n      //   <label>{ pcount }</label>\r\n      //   </div>\r\n       \r\n      //   <div >\r\n      //   <td/>\r\n      //    <div className='content'>\r\n      //  {\r\n      //   post.content\r\n      //    }\r\n      //    </div>\r\n\r\n      //   </div>\r\n      //   </div>\r\n      );\r\n\r\n }\r\n\r\n/* <div className=\"post-view-row\">\r\n<label>첨부파일</label>\r\n{image && <img src={`data:image/jpeg;base64,${image}`} alt=\"이미지\" />}\r\n</div> */\r\n\r\nexport default BoardDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAGC,WAAW,EAAGC,SAAS,QAAO,kBAAkB;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,IAAIC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC5B,IAAI,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC;EACA;EACA,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,IAAI,CAACY,MAAM,EAAGC,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAGnCC,SAAS,CAAC,MAAM;IACdF,KAAK,CAACe,GAAG,CAAC,6BAA6B,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC1BR,OAAO,CAACQ,IAAI,CAAC;MACb;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEf,OAAA;IAAAiB,QAAA,EAEEC,MAAM,CAACC,IAAI,CAACN,IAAI,CAAC,CAACO,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC3BtB,OAAA;MAAAiB,QAAA,gBACAjB,OAAA;QAAAiB,QAAA,EAAKK,CAAC,GAAE;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChB1B,OAAA;QAAAiB,QAAA,EAAKJ,IAAI,CAACQ,CAAC,CAAC,CAACM;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9B1B,OAAA;QAAAiB,QAAA,EAAKJ,IAAI,CAACQ,CAAC,CAAC,CAACO;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChC1B,OAAA;QAAAiB,QAAA,EAAKJ,IAAI,CAACQ,CAAC,CAAC,CAACQ;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAJpBJ,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG;EACV;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EAAA;AAGL;;AAED;AACA;AACA;AACA;AAHAxB,EAAA,CArESD,WAAW;EAAA,QAEDR,WAAW;AAAA;AAAAqC,EAAA,GAFrB7B,WAAW;AA0EpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
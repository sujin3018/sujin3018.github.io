{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Main from './Main';\nfunction Result(Main) {\n  _s();\n  // 결과를 계산할 때 사용할 상태 변수\n  console.log(Main.arr);\n  let [score, totalScore] = useState(0);\n  const spec = [4, 5, 7, 8];\n  if (spec.includes(Main.arr)) {\n    switch (value) {\n      case '전혀':\n        score = 3;\n        break;\n      case '가끔':\n        score = 2;\n        break;\n      case '자주':\n        score = 1;\n        break;\n      case '항상':\n        score = 0;\n        break;\n      default:\n        score = 0;\n    }\n  } else {\n    switch (value) {\n      case '전혀':\n        score = 0;\n        break;\n      case '가끔':\n        score = 1;\n        break;\n      case '자주':\n        score = 2;\n        break;\n      case '항상':\n        score = 3;\n        break;\n      default:\n        score = 0;\n    }\n  }\n  totalScore += score;\n\n  // <div>\n  //   <h1>결과</h1>\n  //   <div> 총 점수 : {totalScore}</div>\n  // </div>\n}\n_s(Result, \"vghZKL5j8vAjZhNewXsHVM7K6oo=\");\n_c = Result;\nconsole.log(Result.totalScore);\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","Main","Result","_s","console","log","arr","score","totalScore","spec","includes","value","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Main from './Main';\r\n\r\nfunction Result (Main)  {\r\n  // 결과를 계산할 때 사용할 상태 변수\r\n  console.log(Main.arr);\r\n  let [score, totalScore] = useState(0);\r\n\r\n  const spec = [4, 5, 7, 8];\r\n\r\n    if (spec.includes(Main.arr)) {\r\n      switch (value) {\r\n        case '전혀':\r\n          score = 3;\r\n          break;\r\n        case '가끔':\r\n          score = 2;\r\n          break;\r\n        case '자주':\r\n          score = 1;\r\n          break;\r\n        case '항상':\r\n          score = 0;\r\n          break;\r\n        default:\r\n          score = 0;\r\n      }\r\n    } else {\r\n      switch (value) {\r\n        case '전혀':\r\n          score = 0;\r\n          break;\r\n        case '가끔':\r\n          score = 1;\r\n          break;\r\n        case '자주':\r\n          score = 2;\r\n          break;\r\n        case '항상':\r\n          score = 3;\r\n          break;\r\n        default:\r\n          score = 0;\r\n      }\r\n    }\r\n    \r\n    totalScore += score;\r\n    \r\n    \r\n    // <div>\r\n    //   <h1>결과</h1>\r\n    //   <div> 총 점수 : {totalScore}</div>\r\n    // </div>\r\n    \r\n  }\r\n  console.log(Result.totalScore);\r\n  \r\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,SAASC,MAAMA,CAAED,IAAI,EAAG;EAAAE,EAAA;EACtB;EACAC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,GAAG,CAAC;EACrB,IAAI,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEvB,IAAIA,IAAI,CAACC,QAAQ,CAACT,IAAI,CAACK,GAAG,CAAC,EAAE;IAC3B,QAAQK,KAAK;MACX,KAAK,IAAI;QACPJ,KAAK,GAAG,CAAC;QACT;MACF,KAAK,IAAI;QACPA,KAAK,GAAG,CAAC;QACT;MACF,KAAK,IAAI;QACPA,KAAK,GAAG,CAAC;QACT;MACF,KAAK,IAAI;QACPA,KAAK,GAAG,CAAC;QACT;MACF;QACEA,KAAK,GAAG,CAAC;IACb;EACF,CAAC,MAAM;IACL,QAAQI,KAAK;MACX,KAAK,IAAI;QACPJ,KAAK,GAAG,CAAC;QACT;MACF,KAAK,IAAI;QACPA,KAAK,GAAG,CAAC;QACT;MACF,KAAK,IAAI;QACPA,KAAK,GAAG,CAAC;QACT;MACF,KAAK,IAAI;QACPA,KAAK,GAAG,CAAC;QACT;MACF;QACEA,KAAK,GAAG,CAAC;IACb;EACF;EAEAC,UAAU,IAAID,KAAK;;EAGnB;EACA;EACA;EACA;AAEF;AAACJ,EAAA,CAnDMD,MAAM;AAAAU,EAAA,GAANV,MAAM;AAoDbE,OAAO,CAACC,GAAG,CAACH,MAAM,CAACM,UAAU,CAAC;AAEhC,eAAeN,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
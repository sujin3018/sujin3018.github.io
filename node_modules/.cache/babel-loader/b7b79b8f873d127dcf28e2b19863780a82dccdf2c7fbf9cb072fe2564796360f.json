{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Result({\n  answers\n}) {\n  _s();\n  // totalScore 상태와 해당 상태를 업데이트하는 함수를 생성\n  const [totalScore, setTotalScore] = useState(0);\n  const calculateScore = (questionId, value) => {\n    // 이전 상태를 가져와서 업데이트\n    setTotalScore(prevTotalScore => {\n      // 이전 상태를 기반으로 새로운 점수를 계산\n      const spec = [4, 5, 7, 8];\n      let score;\n      if (spec.includes(questionId)) {\n        switch (value) {\n          case '전혀':\n            score = 3;\n            break;\n          case '가끔':\n            score = 2;\n            break;\n          case '자주':\n            score = 1;\n            break;\n          case '항상':\n            score = 0;\n            break;\n          default:\n            score = 0;\n        }\n      } else {\n        switch (value) {\n          case '전혀':\n            score = 0;\n            break;\n          case '가끔':\n            score = 1;\n            break;\n          case '자주':\n            score = 2;\n            break;\n          case '항상':\n            score = 3;\n            break;\n          default:\n            score = 0;\n        }\n      }\n\n      // 이전 상태에 새로운 점수를 더하여 반환\n      return prevTotalScore + score;\n    });\n  };\n\n  // 답변 데이터를 기반으로 점수 계산\n  for (const key in answers) {\n    if (answers.hasOwnProperty(key)) {\n      calculateScore(parseInt(key), answers[key]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uCD1D \\uC810\\uC218: \", totalScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Result, \"LJE4bKkumtn0B381SG/cgAu0buw=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Result","answers","_s","totalScore","setTotalScore","calculateScore","questionId","value","prevTotalScore","spec","score","includes","key","hasOwnProperty","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Result({ answers }) {\r\n  // totalScore 상태와 해당 상태를 업데이트하는 함수를 생성\r\n  const [totalScore, setTotalScore] = useState(0);\r\n\r\n  const calculateScore = (questionId, value) => {\r\n    // 이전 상태를 가져와서 업데이트\r\n    setTotalScore((prevTotalScore) => {\r\n      // 이전 상태를 기반으로 새로운 점수를 계산\r\n      const spec = [4, 5, 7, 8];\r\n      let score;\r\n\r\n      if (spec.includes(questionId)) {\r\n        switch (value) {\r\n          case '전혀':\r\n            score = 3;\r\n            break;\r\n          case '가끔':\r\n            score = 2;\r\n            break;\r\n          case '자주':\r\n            score = 1;\r\n            break;\r\n          case '항상':\r\n            score = 0;\r\n            break;\r\n          default:\r\n            score = 0;\r\n        }\r\n      } else {\r\n        switch (value) {\r\n          case '전혀':\r\n            score = 0;\r\n            break;\r\n          case '가끔':\r\n            score = 1;\r\n            break;\r\n          case '자주':\r\n            score = 2;\r\n            break;\r\n          case '항상':\r\n            score = 3;\r\n            break;\r\n          default:\r\n            score = 0;\r\n        }\r\n      }\r\n\r\n      // 이전 상태에 새로운 점수를 더하여 반환\r\n      return prevTotalScore + score;\r\n    });\r\n  };\r\n\r\n  // 답변 데이터를 기반으로 점수 계산\r\n  for (const key in answers) {\r\n    if (answers.hasOwnProperty(key)) {\r\n      calculateScore(parseInt(key), answers[key]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>결과</h1>\r\n      <p>총 점수: {totalScore}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMQ,cAAc,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IAC5C;IACAH,aAAa,CAAEI,cAAc,IAAK;MAChC;MACA,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzB,IAAIC,KAAK;MAET,IAAID,IAAI,CAACE,QAAQ,CAACL,UAAU,CAAC,EAAE;QAC7B,QAAQC,KAAK;UACX,KAAK,IAAI;YACPG,KAAK,GAAG,CAAC;YACT;UACF,KAAK,IAAI;YACPA,KAAK,GAAG,CAAC;YACT;UACF,KAAK,IAAI;YACPA,KAAK,GAAG,CAAC;YACT;UACF,KAAK,IAAI;YACPA,KAAK,GAAG,CAAC;YACT;UACF;YACEA,KAAK,GAAG,CAAC;QACb;MACF,CAAC,MAAM;QACL,QAAQH,KAAK;UACX,KAAK,IAAI;YACPG,KAAK,GAAG,CAAC;YACT;UACF,KAAK,IAAI;YACPA,KAAK,GAAG,CAAC;YACT;UACF,KAAK,IAAI;YACPA,KAAK,GAAG,CAAC;YACT;UACF,KAAK,IAAI;YACPA,KAAK,GAAG,CAAC;YACT;UACF;YACEA,KAAK,GAAG,CAAC;QACb;MACF;;MAEA;MACA,OAAOF,cAAc,GAAGE,KAAK;IAC/B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,KAAK,MAAME,GAAG,IAAIX,OAAO,EAAE;IACzB,IAAIA,OAAO,CAACY,cAAc,CAACD,GAAG,CAAC,EAAE;MAC/BP,cAAc,CAACS,QAAQ,CAACF,GAAG,CAAC,EAAEX,OAAO,CAACW,GAAG,CAAC,CAAC;IAC7C;EACF;EAEA,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACXpB,OAAA;MAAAgB,QAAA,GAAG,uBAAM,EAACZ,UAAU;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACjB,EAAA,CAjEQF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAmEf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Main from './Main';\nimport { useLocation } from 'react-router-dom';\nfunction Result() {\n  _s();\n  const location = useLocation();\n  const questionId = location.state.questionId;\n  const value = location.state.value;\n  console.log(questionId, value);\n  //결과를 계산할 때 사용할 상태 변수\n  // let [score, totalScore] = useState(0);\n\n  // console.log(Main.arr);\n\n  // const spec = [4, 5, 7, 8];\n\n  //   if (spec.includes(answer)) {\n  //     switch (value) {\n  //       case '전혀':\n  //         score = 3;\n  //         break;\n  //       case '가끔':\n  //         score = 2;\n  //         break;\n  //       case '자주':\n  //         score = 1;\n  //         break;\n  //       case '항상':\n  //         score = 0;\n  //         break;\n  //       default:\n  //         score = 0;\n  //     }\n  //   } else {\n  //     switch (value) {\n  //       case '전혀':\n  //         score = 0;\n  //         break;\n  //       case '가끔':\n  //         score = 1;\n  //         break;\n  //       case '자주':\n  //         score = 2;\n  //         break;\n  //       case '항상':\n  //         score = 3;\n  //         break;\n  //       default:\n  //         score = 0;\n  //     }\n  //   }\n\n  //   totalScore += score;\n\n  //   // <div>\n  //   //   <h1>결과</h1>\n  //   //   <div> 총 점수 : {totalScore}</div>\n  //   // </div>\n\n  //   console.log(Result.totalScore);\n}\n_s(Result, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","Main","useLocation","Result","_s","location","questionId","state","value","console","log","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Result.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport Main from './Main';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nfunction Result ()  {\r\n\r\n  const location = useLocation();\r\n\r\n  const questionId = location.state.questionId;\r\n  const value = location.state.value;\r\n\r\n\r\n  console.log(questionId , value);\r\n  //결과를 계산할 때 사용할 상태 변수\r\n  // let [score, totalScore] = useState(0);\r\n  \r\n\r\n  // console.log(Main.arr);\r\n\r\n  // const spec = [4, 5, 7, 8];\r\n\r\n  //   if (spec.includes(answer)) {\r\n  //     switch (value) {\r\n  //       case '전혀':\r\n  //         score = 3;\r\n  //         break;\r\n  //       case '가끔':\r\n  //         score = 2;\r\n  //         break;\r\n  //       case '자주':\r\n  //         score = 1;\r\n  //         break;\r\n  //       case '항상':\r\n  //         score = 0;\r\n  //         break;\r\n  //       default:\r\n  //         score = 0;\r\n  //     }\r\n  //   } else {\r\n  //     switch (value) {\r\n  //       case '전혀':\r\n  //         score = 0;\r\n  //         break;\r\n  //       case '가끔':\r\n  //         score = 1;\r\n  //         break;\r\n  //       case '자주':\r\n  //         score = 2;\r\n  //         break;\r\n  //       case '항상':\r\n  //         score = 3;\r\n  //         break;\r\n  //       default:\r\n  //         score = 0;\r\n  //     }\r\n  //   }\r\n    \r\n  //   totalScore += score;\r\n    \r\n    \r\n  //   // <div>\r\n  //   //   <h1>결과</h1>\r\n  //   //   <div> 총 점수 : {totalScore}</div>\r\n  //   // </div>\r\n    \r\n  //   console.log(Result.totalScore);\r\n  }\r\n  \r\nexport default Result;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,SAASC,MAAMA,CAAA,EAAK;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,MAAMI,UAAU,GAAGD,QAAQ,CAACE,KAAK,CAACD,UAAU;EAC5C,MAAME,KAAK,GAAGH,QAAQ,CAACE,KAAK,CAACC,KAAK;EAGlCC,OAAO,CAACC,GAAG,CAACJ,UAAU,EAAGE,KAAK,CAAC;EAC/B;EACA;;EAGA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;EACA;;EAEA;AACA;AAACJ,EAAA,CA9DMD,MAAM;EAAA,QAEID,WAAW;AAAA;AAAAS,EAAA,GAFrBR,MAAM;AAgEf,eAAeA,MAAM;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
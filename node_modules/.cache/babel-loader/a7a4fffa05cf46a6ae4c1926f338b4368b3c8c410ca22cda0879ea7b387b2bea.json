{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\Desktop\\\\study\\\\project\\\\src\\\\routes\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport data from \"../data.js\";\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\n// import Result from \"./Result.js\";\nimport React from 'react';\nimport { calculateScore } from './Calculate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  let [answer, setAnswer] = useState({});\n  let [num, setNum] = useState([]);\n  let [page, setPage] = useState(1);\n  let totalPage = 5; // 한 페이지에 표시할 질문의 수를 나타내는 변수\n\n  let start = (page - 1) * totalPage;\n  let end = start + totalPage;\n  let curPage = data.slice(start, end);\n  const isLastPage = end >= data.length;\n  const isFristPage = start !== 0;\n  let navigate = useNavigate();\n  const [userAnswers, setUserAnswers] = useState([]);\n  const nextPage = () => {\n    let ques = data.slice(start, end).filter(test => !answer[`question_${test.id}`]);\n    if (ques.length > 0) {\n      const num = ques.map(question => question.id);\n      setNum(num);\n      alert(`${num.join(\", \")} 번 질문에 답변해주세요!`);\n    } else {\n      if (isLastPage) {\n        navigate('/result');\n      } else {\n        setPage(page + 1);\n      }\n    }\n  };\n\n  // const change = (questionId, value) => {\n  //   setAnswer({\n  //     ...answer,\n  //     [questionId]: value\n  //   });\n  // };\n\n  const change = (questionId, value) => {\n    // 이전 답변 정보를 복사하고 현재 질문의 답변을 추가합니다.\n    const updatedAnswers = [...userAnswers, {\n      questionId,\n      value\n    }];\n    setUserAnswers(updatedAnswers);\n    setAnswer({\n      ...answer,\n      [questionId]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2A4\\uD2B8\\uB808\\uC2A4 \\uC790\\uAC00 \\uC9C4\\uB2E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), curPage.map(function (test) {\n      const questionId = `question_${test.id}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [test.id, \". \", test.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: ['전혀', '가끔', '자주', '항상'].map(value => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                // className=\"radi\"\n                inline: true,\n                name: questionId,\n                type: \"radio\",\n                value: value,\n                onChange: () => change(questionId, value),\n                checked: answer[questionId] === value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), value]\n            }, value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, questionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    }), isFristPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPage(page - 1);\n      },\n      children: \"\\uC774\\uC804\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this) : null, \";\", isLastPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPage,\n      children: \"\\uACB0\\uACFC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPage,\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"/dk8qRWeCIZ2t+OWg2JDW/FEBtc=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","Form","data","Routes","Route","Link","useNavigate","React","calculateScore","jsxDEV","_jsxDEV","Main","_s","answer","setAnswer","num","setNum","page","setPage","totalPage","start","end","curPage","slice","isLastPage","length","isFristPage","navigate","userAnswers","setUserAnswers","nextPage","ques","filter","test","id","map","question","alert","join","change","questionId","value","updatedAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","text","style","marginRight","Check","inline","name","type","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/m/Desktop/study/project/src/routes/Main.js"],"sourcesContent":["import {  useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport data from \"../data.js\";\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\n// import Result from \"./Result.js\";\r\nimport React from 'react';\r\nimport { calculateScore } from './Calculate';\r\n\r\nfunction Main() {\r\n  let [answer, setAnswer] = useState({});\r\n  let [num, setNum] = useState([]);\r\n  let [page, setPage] = useState(1);\r\n  let totalPage = 5; // 한 페이지에 표시할 질문의 수를 나타내는 변수\r\n  \r\n  let start = (page - 1) * totalPage;\r\n  let end = start + totalPage;\r\n  let curPage = data.slice(start, end);\r\n  const isLastPage = end >= data.length;\r\n  const isFristPage = start !== 0 ;\r\n  let navigate = useNavigate();\r\n\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n  const nextPage = () => {\r\n    let ques = data\r\n      .slice(start, end)\r\n      .filter((test) => !answer[`question_${test.id}`]);\r\n\r\n    if (ques.length > 0) {\r\n      const num = ques.map((question) => question.id);\r\n      setNum(num);\r\n      alert(`${num.join(\", \")} 번 질문에 답변해주세요!`);\r\n    } else {\r\n      if (isLastPage) {\r\n        navigate('/result');\r\n      } else {\r\n        setPage(page + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const change = (questionId, value) => {\r\n  //   setAnswer({\r\n  //     ...answer,\r\n  //     [questionId]: value\r\n  //   });\r\n  // };\r\n\r\n\r\n  const change = (questionId, value) => {\r\n    // 이전 답변 정보를 복사하고 현재 질문의 답변을 추가합니다.\r\n    const updatedAnswers = [...userAnswers, { questionId, value }];\r\n    setUserAnswers(updatedAnswers);\r\n    setAnswer({\r\n      ...answer,\r\n      [questionId]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>스트레스 자가 진단</h1>\r\n      <br />\r\n      {curPage.map(function (test) {\r\n        const questionId = `question_${test.id}`;\r\n        return (\r\n          <div key={questionId}>\r\n            <h4 >\r\n              {test.id}. {test.text}\r\n            </h4>\r\n            <br />\r\n            <h4>\r\n              <Form>\r\n                {['전혀', '가끔', '자주', '항상'].map((value) => (\r\n                  <label key={value} style={{ marginRight: '10px' }}>\r\n                    <Form.Check\r\n                      // className=\"radi\"\r\n                      inline\r\n                      name={questionId}\r\n                      type=\"radio\"\r\n                      value={value}\r\n                      onChange={() => change(questionId, value)}\r\n                      checked={answer[questionId] === value}\r\n                    />\r\n                    {value}\r\n                  </label>\r\n                ))}\r\n              </Form>\r\n            </h4>\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n\r\n {isFristPage ? (\r\n    <button onClick={()=>{setPage(page-1)}}>이전</button>\r\n ) : null\r\n};\r\n\r\n      {isLastPage ? (\r\n        <button onClick={nextPage}>결과보기</button>\r\n      ) : (\r\n        <button onClick={nextPage}>다음</button>\r\n      )}\r\n\r\n     {/* 결과 페이지 */}\r\n     <Routes>\r\n     {/* <Route path='/result' element={<Result answers={answer} />} /> */}\r\n      </Routes>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}